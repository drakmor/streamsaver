#!/bin/bash

#****F* ffmpeg/streamsaver ****************************************************
#
# NAME
#    streamsaver - обработчик аудиопотоков с нарезкой их в файлы и
#    ретрансляцией на icecast
#
# VERSION
#    1.0
#
# DESCRIPTION
#    Сценарий принимает аудиопоток с оборудования, по UDP или TCP,
#    фрагментирует его на отрезки заданной длины для последующего хранения и
#    анализа, а также ретранслирует поток на сервер радиовещания icecast для
#    прослушивания аудио конечным пользователем.
#
# USAGE
#    streamsaver <файл настроек>
#
# ARGUMENTS
#    * <файл настроек> - xml-файл с описанием входящего и выходящего потоков и
#      правилами фрагментирования записей.
#
#******************************************************************************

#****f* streamsaver/readOption
#
# NAME
#    readOption - получение значения опции из файла настроек
#
# USAGE
#    readOption <опция> <файл>
#
# ARGUMENTS
#    * опция - имя опции
#    * файл - xml-файл с настройками
#
# RESULT
#    Значение параметра при наличии искомой опции в xml-файле или значение по
#    умолчанию, которое задаётся при инициализации переменной config.
#
# SOURCE
#
readOption() {
	cfg=$(\grep -oPm1 "(?<=<$1>)[^<]+" "$2")
	
	if [ ! -z "$cfg" ]; then
		config[$1]=$cfg
	fi
}
#*****

#****f* streamsaver/enableOption
#
# NAME
#    enableOption - добавление опции к команде ffmpeg
#
# DESCRIPTION
#    Процедура включает опцию, если в конфигурационном файле имеется
#    соответствующая настройка.
#
# USAGE
#    enableOption <опция>
#
# ARGUMENTS
#    * опция - имя опции из массива настроек config.
#
# SOURCE
#
enableOption () {
	if [ ! -z "${config[$1]}" ]; then
		CMD+=" $(echo $* | cut -d ' ' -f 2- | sed "s|%%|\"${config[$1]}\"|g")"
	fi
}
#*****

#****f* streamsaver/readXML
#
# NAME
#    readXML - чтение файла настроек
#
# DESCRIPTION
#    Получение настроек из xml-файла.
#
# USAGE
#    readXML <xml>
#
# ARGUMENTS
#    * xml - файл настроек.
#
# SOURCE
#
readXML() {
	#Чтение настроек из файла
	for option in ${!config[*]}; {
		readOption "$option" "$1"
	}
}
#*****

#****f* streamsaver/makeCMD
#
# NAME
#    makeCMD - создание команды для оцифровки сигнала
#
# DESCRIPTION
#    Процедура составляет команду ffmpeg, включая опции, если они заданы в
#    конфигурационном файле или указаны значения по умолчанию в массиве
#    настроек config.
#
#    Эталонные настройки ffmpeg
#
#        ffmpeg  -reconnect 1 \
#           \
#           -i  "${config[stream]}" \
#              -legacy_icecast 1 \
#              -content_type audio/mpeg \
#              -ice_name "Имя канала" \
#              -ice_description "Описание канала" \
#              icecast://source:${config[password]}@${config[icecast]}/${config[mountpoint]} \
#           \
#           -segment_list "./files_archive.csv" \
#           -segment_list_entry_prefix "$ARCHIVE_DIR" \
#           -segment_list_type "csv" \
#           -segment_list_flags "live" \
#           -segment_atclocktime 1 \
#              -acodec "$FORMAT" -f segment \
#              -segment_time   "$ARCHIVE_TIME" \
#              -segment_format "$FORMAT" \
#              -strftime 1     "$ARCHIVE_DIR/$FILE_NAME"
#           \
#           -segment_list "./files_slices.csv" \
#           -segment_list_entry_prefix "$ARCHIVE_DIR" \
#           -segment_list_type "csv" \
#           -segment_list_flags "live" \
#           -segment_atclocktime 1 \
#              -acodec "$FORMAT" -f segment \
#              -segment_time   "$SLICES_TIME" \
#              -segment_format "$FORMAT" \
#              -strftime 1     "$SLICES_DIR/$FILE_NAME"
#
#    Пример иерархии файлового хранилища:
#        FILES
#        ├── archive
#        │   ├── TK04
#        │   │   └── CH4098
#        │   │       └── 2016-07-12_13:41:47-TK#4-4098.mp2
#        │   ├── TK05
#        │   │   └── CH4098
#        │   │       └── 2016-07-12_13:41:45-TK#5-4098.mp2
#        │   └── TK06
#        │       └── CH53
#        │           └── 2016-07-12_13:41:49-TK#6-53.mp2
#        └── fragments
#            ├── TK04
#            │   └── CH4098
#            │       ├── 2016-07-12_13:41:47-TK#4-4098.mp2
#            │       └── 2016-07-12_13:41:50-TK#4-4098.mp2
#            ├── TK05
#            │   └── CH4098
#            │       ├── 2016-07-12_13:41:45-TK#5-4098.mp2
#            │       └── 2016-07-12_13:41:50-TK#5-4098.mp2
#            └── TK06
#                └── CH53
#                    └── 2016-07-12_13:41:49-TK#6-53.mp2
#
# RESULT
#    Команда ffmpeg, которую можно передать на выполнение.
#
# SOURCE
#
makeCMD() {
	#Правило именования файлов
	FILE_NAME="${config[filename_prefix]}-${config[channel_name]}-CH${config[channel_number]}.${config[filename_suffix]}"

	#Минимальная команда
	CMD="${config[cmd]} -f ${config[input_format]} -i ${config[stream]} -f ${config[output_format]}"

	#КОДИРОВАНИЕ
	# enableOption output_format -c %%

	#ICECAST
	if [ ! -z ${config[icecast]} ]; then
		enableOption input_channel -map %%
		enableOption audio_bitrate -ab %%
		enableOption channel_name \
			-legacy_icecast 1 \
			-content_type audio/mpeg \
			-ice_name %%

		enableOption channel_descr \
			-ice_description %%

		enableOption icecast \
			icecast://source:${config[password]}@${config[icecast]}/${config[mountpoint]}
	fi

	# АРХИВ
	enableOption input_channel -map %%
	enableOption archive_log \
		-segment_list %% \
		-segment_list_entry_prefix "${config[archive_dir]}" \
		-segment_list_type csv \
		-segment_list_flags live

	# +СЕГМЕНТИРОВАНИЕ
	enableOption archive_dir \
		-segment_atclocktime 1 \
		-acodec "${config[output_format]}" \
		-f segment \
		-segment_time   "${config[archive_time]}" \
		-segment_format "${config[output_format]}" \
		-strftime 1     "${config[archive_dir]}/$FILE_NAME"

	# АНАЛИЗ
	enableOption input_channel -map %%
	enableOption slices_log \
		-segment_list %% \
		-segment_list_entry_prefix "${config[slices_dir]}" \
		-segment_list_type csv \
		-segment_list_flags live

	# +СЕГМЕНТИРОВАНИЕ
	enableOption slices_dir \
		-segment_atclocktime 1 \
		-acodec "${config[output_format]}" \
		-f segment \
		-segment_time   "${config[slices_time]}" \
		-segment_format "${config[output_format]}" \
		-strftime 1     "${config[slices_dir]}/$FILE_NAME"

	echo "$CMD"
}
#*****

################################################################################

#****v* streamsaver/config
#
# VARIABLE
#    config - массив настроек, содержащий значения по-умолчанию.
#    Настройки описаны в секции SETTINGS.
#
# USED BY
#    enableOption, readOption, readXML, makeCMD
#
# SOURCE
#
typeset -A config

config=(
	[proxy]="0"
	[stream]=""
	[icecast]=""
	[password]=""
	[channel_name]=""
	[channel_number]=""
	[channel_descr]=""
	[mountpoint]=""
	[cmd]="ffmpeg"
	[input_format]=""
	[input_channel]=""
	[archive_dir]=""
	[archive_time]=""
	[archive_log]=""
	[slices_dir]=""
	[slices_time]=""
	[slices_log]=""
	[filename_prefix]="%Y-%m-%d_%H:%M:%S"
	[filename_suffix]="mp3"
	[output_format]="mp3"
	[audio_bitrate]="256k"
)
#*****

#****v* streamsaver/SETTINGS
#
# VARIABLE
#    SETTINGS - файл настроек
# 
# DESCRIPTION
#    Переменная хранит имя файла настроек, который содержит параметры,
#    перечисленные в массиве опций config, в формате XML. При отсутствии
#    параметра или пустом значении соответствующие флаги а аргументы не
#    добавляются в итоговую команду ffmpeg. Таким образом, например, можно
#    включать или отключать ведение журнала сохранения аудиозаписей, просто
#    указывая или удаляя параметр archive_log.
#
#    Формат файла настроек следующий:
#       <xml>
#    	<!-- Название канала -->
#    	<channel_name></channel_name>
#    	<!-- Описание канала -->
#    	<channel_descr>Тестовый_канал</channel_descr>
#    	<!-- Входящий поток  -->
#    	<stream>http://localhost:8000/tuc01</stream>
#    	<!-- Icecast для вывода -->
#    	<icecast>localhost:8000</icecast>
#    	<!-- Пароль для доступа к Icecast -->
#    	<password>hackme</password>
#    	<!-- Точка подключения канала -->
#    	<mountpoint>tuc02</mountpoint>
#       <!-- Программа/канал из потока -->
#       <input_channel>0:p:4098</input_channel>
#    
#    	<!-- Команда получения сигнала -->
#    	<cmd>ffmpeg</cmd>
#    
#    	<!-- Формат входного потока -->
#    	<input_format>mp2 -map 0:0</input_format>
#    
#    	<!-- Директория для сохранения архивных файлов -->
#    	<archive_dir>FILES/archive/</archive_dir>
#    	<!-- Длительность архивных файлов в секундах -->
#    	<archive_time>3600</archive_time>
#    	<!-- Файл журнала обработки архивных записей -->
#    	<archive_log>FILES/archive.log</archive_log>
#    
#    	<!-- Директория для сохранения фрагментов на анализ -->
#    	<slices_dir>FILES/fragments/</slices_dir>
#    	<!-- Длительность фрагментов для анализа в секундах -->
#    	<slices_time>10</slices_time>
#    	<!-- Файл журнала обработки фрагментов на анализ -->
#    	<slices_log>FILES/fragments.log</slices_log>
#    
#    	<!-- Префикс имени файла -->
#    	<filename_prefix>%Y-%m-%d_%H:%M:%S</filename_prefix>
#    	<!-- Расширение имени файла -->
#    	<filename_suffix>mp2</filename_suffix>
#    
#    	<!-- Формат аудиофайлов -->
#    	<output_format>mp2</output_format>
#    	<!-- Битрейт аудиофайлов -->
#    	<audio_bitrate>256k</audio_bitrate>
#       <!-- Использование streamproxy -->
#       <proxy>1</proxy>
#       </xml>
#
# SOURCE
#
SETTINGS="$1"
#*****

#****t* streamsaver/main
#
# NAME
#    streamsaver
#
# SOURCE
#

#Проверка на наличие файла настроек
if [ -z "$SETTINGS" ]; then
	echo "USAGE: $(basename $0) <settings.xml>" >&2
	exit 1
elif [ ! -r "$SETTINGS" ]; then
	echo "Unable open file $1." >&2
	echo "USAGE: $(basename $0) <settings.xml>" >&2
	exit 1
fi

#Чтение настроек
readXML "$SETTINGS"

#Создание директорий хранения файлов, если требуется
mkdir -p ${config[archive_dir]}
mkdir -p ${config[slices_dir]}

if [ ${config[proxy]} == 1 ]; then
	config[stream]="http://${config[icecast]}/${config[mountpoint]}"
	config[input_format]="${config[output_format]}"
	config[output_format]="copy"
	config[input_channel]=""
	config[icecast]=""
fi

#Создание команды оцифровки сигнала
makeCMD | sh

#*****

